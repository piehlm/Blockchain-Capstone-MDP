// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const verifier = artifacts.require('Verifier');

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
const proveme = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts =>{
    const account_one = accounts[0];
    const account_two = accounts[1];

    beforeEach('Test verification with correct and incorrect proof', async function(){
        try{
            this.contract = await verifier.new({from: account_one});
        }catch(error){
            console.log("verifier from account one error: ", error);
        }        
    })

// Test verification with correct proof
    it('verification with correct proof', async function () {
        let proven = false;
        try{
            if(await this.contract.verifyTx(proveme.proof.A,
                proveme.proof.A_p,
                proveme.proof.B,
                proveme.proof.B_p,
                proveme.proof.C,
                proveme.proof.C_p,
                proveme.proof.H,
                proveme.proof.K,
                proveme.input,)){
                 proven = true;
            }
        }catch(error){
            console.log("verifyTx with correct proof ERROR: ", error);
        }
        assert.equal(proven, true,"Proof is wrong.");
    })

// Test verification with incorrect proof
    it('verification with incorrect proof', async function () {
        let proven = true;
        try{
            //I just swap first two :) 
            if(await this.contract.verifyTx(proveme.proof.A_p, 
                proveme.proof.A, proveme.proof.B, proveme.proof.B_p, 
                proveme.proof.C, proveme.proof.C_p, proveme.proof.H, 
                proveme.proof.K, proveme.input)){
                proven = false
                }
        }catch(error){
            console.log("verification with incorrect proof ERROR: ", error);
        }
        assert.equal(proven, false,"the proof is not wrong.");
    }) 

})
    
